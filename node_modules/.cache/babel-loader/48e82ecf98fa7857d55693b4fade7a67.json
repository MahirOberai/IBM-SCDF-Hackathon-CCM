{"ast":null,"code":"import _regeneratorRuntime from \"/Users/mahiroberai/Downloads/carbon-tutorial-react-step-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/mahiroberai/Downloads/carbon-tutorial-react-step-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"/Users/mahiroberai/Downloads/carbon-tutorial-react-step-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/mahiroberai/Downloads/carbon-tutorial-react-step-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mahiroberai/Downloads/carbon-tutorial-react-step-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/mahiroberai/Downloads/carbon-tutorial-react-step-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mahiroberai/Downloads/carbon-tutorial-react-step-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/mahiroberai/Downloads/carbon-tutorial-react-step-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/mahiroberai/Downloads/carbon-tutorial-react-step-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/mahiroberai/Downloads/carbon-tutorial-react-step-2/src/components/Canvas/Canvas.js\";\nimport React, { Component } from 'react';\nimport { v4 } from 'uuid';\nimport Pusher from 'pusher-js';\nimport floor_plan from './floor_plan.png';\n\nvar Canvas = /*#__PURE__*/function (_Component) {\n  _inherits(Canvas, _Component);\n\n  function Canvas(props) {\n    var _this;\n\n    _classCallCheck(this, Canvas);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Canvas).call(this, props));\n    _this.isPainting = false;\n    _this.userStrokeStyle = '#FF0000';\n    _this.line = [];\n    _this.userId = v4();\n    _this.prevPos = {\n      offsetX: 0,\n      offsetY: 0\n    };\n    _this.onMouseDown = _this.onMouseDown.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onMouseMove = _this.onMouseMove.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.endPaintEvent = _this.endPaintEvent.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.pusher = new Pusher('PUSHER_KEY', {\n      cluster: 'eu'\n    });\n    return _this;\n  }\n\n  _createClass(Canvas, [{\n    key: \"onMouseDown\",\n    value: function onMouseDown(_ref) {\n      var nativeEvent = _ref.nativeEvent;\n      var offsetX = nativeEvent.offsetX,\n          offsetY = nativeEvent.offsetY;\n      this.isPainting = true;\n      this.prevPos = {\n        offsetX: offsetX,\n        offsetY: offsetY\n      };\n    }\n  }, {\n    key: \"onMouseMove\",\n    value: function onMouseMove(_ref2) {\n      var nativeEvent = _ref2.nativeEvent;\n\n      if (this.isPainting) {\n        var offsetX = nativeEvent.offsetX,\n            offsetY = nativeEvent.offsetY;\n        var offSetData = {\n          offsetX: offsetX,\n          offsetY: offsetY\n        };\n        this.position = {\n          start: _objectSpread({}, this.prevPos),\n          stop: _objectSpread({}, offSetData)\n        };\n        this.line = this.line.concat(this.position);\n        this.paint(this.prevPos, offSetData, this.userStrokeStyle);\n      }\n    }\n  }, {\n    key: \"endPaintEvent\",\n    value: function endPaintEvent() {\n      if (this.isPainting) {\n        this.isPainting = false;\n        this.sendPaintData();\n      }\n    }\n  }, {\n    key: \"paint\",\n    value: function paint(prevPos, currPos, strokeStyle) {\n      var offsetX = currPos.offsetX,\n          offsetY = currPos.offsetY;\n      var x = prevPos.offsetX,\n          y = prevPos.offsetY;\n      this.ctx.beginPath();\n      this.ctx.strokeStyle = strokeStyle;\n      this.ctx.moveTo(x, y);\n      this.ctx.lineTo(offsetX, offsetY);\n      this.ctx.stroke();\n      this.prevPos = {\n        offsetX: offsetX,\n        offsetY: offsetY\n      };\n    }\n  }, {\n    key: \"sendPaintData\",\n    value: function () {\n      var _sendPaintData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var body, req, res;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                body = {\n                  line: this.line,\n                  userId: this.userId\n                };\n                _context.next = 3;\n                return fetch('http://localhost:4000/paint', {\n                  method: 'post',\n                  body: JSON.stringify(body),\n                  headers: {\n                    'content-type': 'application/json'\n                  }\n                });\n\n              case 3:\n                req = _context.sent;\n                _context.next = 6;\n                return req.json();\n\n              case 6:\n                res = _context.sent;\n                this.line = [];\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function sendPaintData() {\n        return _sendPaintData.apply(this, arguments);\n      }\n\n      return sendPaintData;\n    }()\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.canvas.width = 1000;\n      this.canvas.height = 800;\n      this.ctx = this.canvas.getContext('2d');\n      this.ctx.lineJoin = 'round';\n      this.ctx.lineCap = 'round';\n      this.ctx.lineWidth = 5;\n      var channel = this.pusher.subscribe('painting');\n      channel.bind('draw', function (data) {\n        var userId = data.userId,\n            line = data.line;\n\n        if (userId !== _this2.userId) {\n          line.forEach(function (position) {\n            _this2.paint(position.start, position.stop, _this2.guestStrokeStyle);\n          });\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return /*#__PURE__*/React.createElement(\"canvas\", {\n        ref: function ref(_ref3) {\n          return _this3.canvas = _ref3;\n        }\n        /*style={{ background: 'white' }}*/\n        ,\n        style: {\n          backgroundImage: 'url(' + floor_plan + ')'\n        },\n        onMouseDown: this.onMouseDown,\n        onMouseLeave: this.endPaintEvent,\n        onMouseUp: this.endPaintEvent,\n        onMouseMove: this.onMouseMove,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 7\n        }\n      });\n    }\n  }]);\n\n  return Canvas;\n}(Component);\n\nexport default Canvas;","map":{"version":3,"sources":["/Users/mahiroberai/Downloads/carbon-tutorial-react-step-2/src/components/Canvas/Canvas.js"],"names":["React","Component","v4","Pusher","floor_plan","Canvas","props","isPainting","userStrokeStyle","line","userId","prevPos","offsetX","offsetY","onMouseDown","bind","onMouseMove","endPaintEvent","pusher","cluster","nativeEvent","offSetData","position","start","stop","concat","paint","sendPaintData","currPos","strokeStyle","x","y","ctx","beginPath","moveTo","lineTo","stroke","body","fetch","method","JSON","stringify","headers","req","json","res","canvas","width","height","getContext","lineJoin","lineCap","lineWidth","channel","subscribe","data","forEach","guestStrokeStyle","ref","backgroundImage"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { v4 } from 'uuid';\nimport Pusher from 'pusher-js';\nimport floor_plan from './floor_plan.png';\n\nclass Canvas extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onMouseDown = this.onMouseDown.bind(this);\n    this.onMouseMove = this.onMouseMove.bind(this);\n    this.endPaintEvent = this.endPaintEvent.bind(this);\n\n    this.pusher = new Pusher('PUSHER_KEY', {\n      cluster: 'eu',\n    });\n  }\n  isPainting = false;\n  userStrokeStyle = '#FF0000';\n  line = [];\n  userId = v4();\n  prevPos = { offsetX: 0, offsetY: 0 };\n\n  onMouseDown({ nativeEvent }) {\n    const { offsetX, offsetY } = nativeEvent;\n    this.isPainting = true;\n    this.prevPos = { offsetX, offsetY };\n  }\n\n  onMouseMove({ nativeEvent }) {\n    if (this.isPainting) {\n      const { offsetX, offsetY } = nativeEvent;\n      const offSetData = { offsetX, offsetY };\n      this.position = {\n        start: { ...this.prevPos },\n        stop: { ...offSetData },\n      };\n      this.line = this.line.concat(this.position);\n      this.paint(this.prevPos, offSetData, this.userStrokeStyle);\n    }\n  }\n\n  endPaintEvent() {\n    if (this.isPainting) {\n      this.isPainting = false;\n      this.sendPaintData();\n    }\n  }\n\n  paint(prevPos, currPos, strokeStyle) {\n    const { offsetX, offsetY } = currPos;\n    const { offsetX: x, offsetY: y } = prevPos;\n\n    this.ctx.beginPath();\n    this.ctx.strokeStyle = strokeStyle;\n    this.ctx.moveTo(x, y);\n    this.ctx.lineTo(offsetX, offsetY);\n    this.ctx.stroke();\n    this.prevPos = { offsetX, offsetY };\n  }\n\n  async sendPaintData() {\n    const body = {\n      line: this.line,\n      userId: this.userId,\n    };\n\n    const req = await fetch('http://localhost:4000/paint', {\n      method: 'post',\n      body: JSON.stringify(body),\n      headers: {\n        'content-type': 'application/json',\n      },\n    });\n    const res = await req.json();\n    this.line = [];\n  }\n\n  componentDidMount() {\n    this.canvas.width = 1000;\n    this.canvas.height = 800;\n    this.ctx = this.canvas.getContext('2d');\n    this.ctx.lineJoin = 'round';\n    this.ctx.lineCap = 'round';\n    this.ctx.lineWidth = 5;\n\n    const channel = this.pusher.subscribe('painting');\n    channel.bind('draw', data => {\n      const { userId, line } = data;\n      if (userId !== this.userId) {\n        line.forEach(position => {\n          this.paint(position.start, position.stop, this.guestStrokeStyle);\n        });\n      }\n    });\n  }\n\n  render() {\n    return (\n      <canvas\n        ref={ref => (this.canvas = ref)}\n        /*style={{ background: 'white' }}*/\n        style={{ backgroundImage: 'url(' + floor_plan + ')' }}\n        onMouseDown={this.onMouseDown}\n        onMouseLeave={this.endPaintEvent}\n        onMouseUp={this.endPaintEvent}\n        onMouseMove={this.onMouseMove}\n      />\n    );\n  }\n}\n\nexport default Canvas;\n"]},"metadata":{},"sourceType":"module"}